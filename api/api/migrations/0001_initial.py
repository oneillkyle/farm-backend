# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-30 23:50
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
            options={
                'verbose_name': 'Budget',
                'db_table': 'budget',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Crop',
                'db_table': 'crop',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CropHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('plot_width_coordinate', models.IntegerField(blank=True, null=True)),
                ('plot_length_coordinate', models.IntegerField(blank=True, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('number', models.PositiveIntegerField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('serial_number', models.SlugField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Crop')),
            ],
            options={
                'verbose_name': 'Crop History',
                'db_table': 'crop_history',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CropStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2000, unique=True)),
                ('description', models.TextField(max_length=2000)),
            ],
            options={
                'verbose_name': 'Crop Status',
                'db_table': 'crop_status',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CropType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024, unique=True)),
                ('details', models.TextField(blank=True)),
                ('average_days_to_mature', models.IntegerField(blank=True, null=True)),
                ('min_row_width', models.IntegerField(blank=True, null=True)),
                ('min_row_length', models.IntegerField(blank=True, null=True)),
                ('feeding_requirements', models.TextField(blank=True)),
                ('min_temp', models.IntegerField(blank=True, null=True)),
                ('max_temp', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Crop Type',
                'db_table': 'crop_type',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CropTypeLinks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField()),
                ('crop_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='api.CropType')),
            ],
            options={
                'verbose_name': 'Crop Type Link',
                'db_table': 'crop_type_link',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('time_spent', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('amount', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('budget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Budget')),
                ('crop_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='api.CropType')),
            ],
            options={
                'verbose_name': 'Expense',
                'db_table': 'expense',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Farm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2000, unique=True)),
            ],
            options={
                'verbose_name': 'Farm',
                'db_table': 'farm',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('farm', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.Farm')),
            ],
            options={
                'verbose_name': 'Inventory',
                'db_table': 'inventory',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('amount', models.PositiveIntegerField(blank=True, null=True)),
                ('crop_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_items', to='api.CropType')),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='api.Inventory')),
            ],
            options={
                'verbose_name': 'Inventory Item',
                'db_table': 'inventory_item',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Plot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True)),
                ('plot_width', models.PositiveIntegerField()),
                ('plot_length', models.PositiveIntegerField()),
                ('plot_location', models.IntegerField()),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plots', to='api.Farm')),
            ],
            options={
                'verbose_name': 'Plot',
                'db_table': 'plot',
                'ordering': ['plot_location'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SeedStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2000, unique=True)),
                ('description', models.TextField(max_length=2000)),
            ],
            options={
                'verbose_name': 'Seed Status',
                'db_table': 'seed_status',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2000, unique=True)),
                ('address', models.CharField(blank=True, max_length=2000)),
                ('phone', models.IntegerField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Supplier',
                'db_table': 'supplier',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Threat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2000, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Threat',
                'db_table': 'threat',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='croptype',
            name='susceptible_to',
            field=models.ManyToManyField(to='api.Threat'),
        ),
        migrations.AddField(
            model_name='crophistory',
            name='plot',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='crop_histories', to='api.Plot'),
        ),
        migrations.AddField(
            model_name='crophistory',
            name='seed_status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='crop_histories', to='api.SeedStatus'),
        ),
        migrations.AddField(
            model_name='crophistory',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='crop_histories', to='api.CropStatus'),
        ),
        migrations.AddField(
            model_name='crophistory',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='crop_histories', to='api.Supplier'),
        ),
        migrations.AddField(
            model_name='crop',
            name='crop_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crops', to='api.CropType'),
        ),
        migrations.AddField(
            model_name='budget',
            name='farm',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budgets', to='api.Farm'),
        ),
    ]
